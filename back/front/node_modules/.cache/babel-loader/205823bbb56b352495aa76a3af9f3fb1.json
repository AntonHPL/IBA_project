{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBA Project\\\\back\\\\front\\\\src\\\\components\\\\SeasonForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Message from './Message';\nimport Select from 'react-select';\nimport MatchForm from './MatchForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeasonForm = ({\n  competitions\n}) => {\n  _s();\n\n  const [seasons, setSeasons] = useState([]);\n  const [seasonsIds, setSeasonsIds] = useState([]);\n  const [changed, setChanged] = useState(false);\n  const [message, setMessage] = useState('');\n  const [seasonName, setSeasonName] = useState('');\n  const [seasonId, setSeasonId] = useState('');\n  const [isCompetitionInStorage, setIsCompetitionInStorage] = useState(false);\n\n  const changeSeasonName = e => {\n    setSeasonName(e.target.value);\n  };\n\n  const changeSeasonId = e => {\n    setSeasonId(e.target.value);\n  };\n\n  const onClick = e => {\n    e.preventDefault();\n    const newSeason = {\n      _id: seasonId,\n      name: seasonName,\n      competition_id: +localStorage.getItem(\"clicked_competition\")\n    };\n    axios.post('http://localhost:4000/app/newSeason', newSeason).then(() => {\n      setSeasonName('');\n      setSeasonId('');\n      renderSeasons(+localStorage.getItem(\"clicked_competition\"));\n    }).then(() => alert(\"The Season has been successfully created!\"));\n  };\n\n  const renderSeasons = e => {\n    axios.get(`http://localhost:4000/app/getSeasons/${e}`).then(res => res.data).then(res => {\n      for (let i = 0; i < res.length; i++) {\n        seasons[i] = {\n          \"value\": res[i].name,\n          \"label\": res[i].name,\n          \"id\": res[i]._id\n        };\n      }\n\n      ;\n      setSeasons(seasons);\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/app/getSeasons').then(res => res.data).then(res => {\n      for (let i = 0; i < res.length; i++) {\n        seasonsIds[i] = res[i]._id;\n      }\n\n      ;\n      setSeasonsIds(seasonsIds);\n    });\n  }, [seasonsIds]);\n  useEffect(() => {\n    if (seasonsIds.includes(+seasonId)) {\n      setMessage(\"This Season id already exists. Please choose another Season id.\");\n    } else {\n      setMessage(\"\");\n    }\n  }, [seasonId, seasonsIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open_button\",\n        onClick: () => setChanged(!changed),\n        children: \"Would you like to create a new Season?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: changed ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create a new Season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0'\n        },\n        children: [\"Please be sure that \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"the Competition is chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 64\n        }, this), \" before you start creating a new Season.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Which Competition does a new Season belong to?\",\n        onChange: e => {\n          renderSeasons(e.id);\n          localStorage.setItem(\"clicked_competition\", e.id);\n          setIsCompetitionInStorage(true);\n          localStorage.removeItem(\"clicked_season\");\n        },\n        options: competitions,\n        onMenuOpen: () => {\n          setSeasons([]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formPlusMessageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"creationForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"enterSeasonId\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"star\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), \"Season id:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"enterSeasonId\",\n              type: \"number\",\n              value: seasonId,\n              placeholder: \"Enter a Season id\",\n              autoComplete: \"off\",\n              onChange: e => changeSeasonId(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"enterSeasonName\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"star\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), \"Season name:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"enterSeasonName\",\n              type: \"text\",\n              value: seasonName,\n              placeholder: \"Enter a Season name\",\n              autoComplete: \"off\",\n              onChange: e => changeSeasonName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit_button\",\n            disabled: seasonId && seasonName && isCompetitionInStorage && !seasonsIds.includes(+seasonId) ? false : true,\n            onClick: e => onClick(e),\n            children: \"Create a new Season\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message_container\",\n          style: message ? {\n            border: '2px solid #FF0000'\n          } : {\n            border: '2px solid #00FF00'\n          },\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MatchForm, {\n          seasons: seasons,\n          isCompetitionInStorage: isCompetitionInStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SeasonForm, \"u+w4WJJuI+85+G9O+w5+gA6GxSw=\");\n\n_c = SeasonForm;\nexport default SeasonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeasonForm\");","map":{"version":3,"sources":["D:/IBA Project/back/front/src/components/SeasonForm.js"],"names":["React","useState","useEffect","Message","Select","MatchForm","axios","SeasonForm","competitions","seasons","setSeasons","seasonsIds","setSeasonsIds","changed","setChanged","message","setMessage","seasonName","setSeasonName","seasonId","setSeasonId","isCompetitionInStorage","setIsCompetitionInStorage","changeSeasonName","e","target","value","changeSeasonId","onClick","preventDefault","newSeason","_id","name","competition_id","localStorage","getItem","post","then","renderSeasons","alert","get","res","data","i","length","includes","display","margin","id","setItem","removeItem","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACoB,sBAAD,EAAyBC,yBAAzB,IAAsDrB,QAAQ,CAAC,KAAD,CAApE;;AAEA,QAAMsB,gBAAgB,GAAIC,CAAD,IAAO;AAC5BN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAIH,CAAD,IAAO;AAC1BJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAME,OAAO,GAAIJ,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,SAAS,GAAG;AACdC,MAAAA,GAAG,EAAEZ,QADS;AAEda,MAAAA,IAAI,EAAEf,UAFQ;AAGdgB,MAAAA,cAAc,EAAE,CAACC,YAAY,CAACC,OAAb,CAAqB,qBAArB;AAHH,KAAlB;AAKA7B,IAAAA,KAAK,CAAC8B,IAAN,CAAW,qCAAX,EAAkDN,SAAlD,EACKO,IADL,CACU,MAAM;AACRnB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAkB,MAAAA,aAAa,CAAC,CAACJ,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAF,CAAb;AACH,KALL,EAMKE,IANL,CAMU,MAAME,KAAK,CAAC,2CAAD,CANrB;AAOH,GAfD;;AAiBA,QAAMD,aAAa,GAAId,CAAD,IAAO;AACzBlB,IAAAA,KAAK,CAACkC,GAAN,CAAW,wCAAuChB,CAAE,EAApD,EACKa,IADL,CACUI,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKL,IAFL,CAEUI,GAAG,IAAI;AACT,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAG,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChClC,QAAAA,OAAO,CAACkC,CAAD,CAAP,GAAa;AACT,mBAASF,GAAG,CAACE,CAAD,CAAH,CAAOX,IADP;AAET,mBAASS,GAAG,CAACE,CAAD,CAAH,CAAOX,IAFP;AAGT,gBAAMS,GAAG,CAACE,CAAD,CAAH,CAAOZ;AAHJ,SAAb;AAKH;;AAAA;AACDrB,MAAAA,UAAU,CAACD,OAAD,CAAV;AAEH,KAZL;AAaH,GAdD;;AAgBAP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACkC,GAAN,CAAU,sCAAV,EACKH,IADL,CACUI,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKL,IAFL,CAEUI,GAAG,IAAI;AACR,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAG,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AACjChC,QAAAA,UAAU,CAACgC,CAAD,CAAV,GAAgBF,GAAG,CAACE,CAAD,CAAH,CAAOZ,GAAvB;AACH;;AAAA;AACDnB,MAAAA,aAAa,CAACD,UAAD,CAAb;AACH,KAPL;AAQH,GATQ,EASN,CAACA,UAAD,CATM,CAAT;AAWAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,UAAU,CAACkC,QAAX,CAAoB,CAAC1B,QAArB,CAAH,EAAmC;AAC/BH,MAAAA,UAAU,CAAC,iEAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GANQ,EAMN,CAACG,QAAD,EAAWR,UAAX,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAG,aAApB;AAAkC,QAAA,OAAO,EAAI,MAAMG,UAAU,CAAC,CAACD,OAAF,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,KAAK,EAAI;AAACiC,QAAAA,OAAO,EAAEjC,OAAO,GAAG,OAAH,GAAa;AAA9B,OAAd;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,KAAK,EAAI;AAACkC,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAAA,wDAA+C;AAAA,iCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,MAAD;AACI,QAAA,WAAW,EAAG,gDADlB;AAEI,QAAA,QAAQ,EAAKvB,CAAD,IAAO;AACfc,UAAAA,aAAa,CAACd,CAAC,CAACwB,EAAH,CAAb;AACAd,UAAAA,YAAY,CAACe,OAAb,CAAqB,qBAArB,EAA4CzB,CAAC,CAACwB,EAA9C;AACA1B,UAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAY,UAAAA,YAAY,CAACgB,UAAb,CAAwB,gBAAxB;AACH,SAPL;AAQI,QAAA,OAAO,EAAI1C,YARf;AASI,QAAA,UAAU,EAAI,MAAM;AAChBE,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,cALJ,eAkBI;AAAK,QAAA,SAAS,EAAG,0BAAjB;AAAA,gCACI;AAAM,UAAA,SAAS,EAAG,cAAlB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,iBAAjB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAG,eAAjB;AAAA,sCACI;AAAM,gBAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,EAAE,EAAG,eADT;AAEI,cAAA,IAAI,EAAG,QAFX;AAGI,cAAA,KAAK,EAAIS,QAHb;AAII,cAAA,WAAW,EAAG,mBAJlB;AAKI,cAAA,YAAY,EAAG,KALnB;AAMI,cAAA,QAAQ,EAAKK,CAAD,IAAOG,cAAc,CAACH,CAAD;AANrC;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAK,YAAA,SAAS,EAAG,iBAAjB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAG,iBAAjB;AAAA,sCACI;AAAM,gBAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,EAAE,EAAG,iBADT;AAEI,cAAA,IAAI,EAAG,MAFX;AAGI,cAAA,KAAK,EAAIP,UAHb;AAII,cAAA,WAAW,EAAG,qBAJlB;AAKI,cAAA,YAAY,EAAG,KALnB;AAMI,cAAA,QAAQ,EAAKO,CAAD,IAAOD,gBAAgB,CAACC,CAAD;AANvC;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eA2BI;AACI,YAAA,SAAS,EAAG,eADhB;AAEI,YAAA,QAAQ,EAAIL,QAAQ,IAAIF,UAAZ,IAA0BI,sBAA1B,IAAoD,CAACV,UAAU,CAACkC,QAAX,CAAoB,CAAC1B,QAArB,CAArD,GAAsF,KAAtF,GAA8F,IAF9G;AAGI,YAAA,OAAO,EAAKK,CAAD,IAAOI,OAAO,CAACJ,CAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAiCI;AAAK,UAAA,SAAS,EAAG,mBAAjB;AAAqC,UAAA,KAAK,EAAGT,OAAO,GAAG;AAACoC,YAAAA,MAAM,EAAE;AAAT,WAAH,GAAmC;AAACA,YAAAA,MAAM,EAAE;AAAT,WAAvF;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,OAAO,EAAIpC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAuDI;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,OAAO,EAAIN,OADf;AAEI,UAAA,sBAAsB,EAAIY;AAF9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsEH,CA7ID;;GAAMd,U;;KAAAA,U;AA+IN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Message from './Message';\r\nimport Select from 'react-select';\r\nimport MatchForm from './MatchForm'\r\nimport axios from 'axios';\r\n\r\nconst SeasonForm = ({competitions}) => {\r\n    const [seasons,setSeasons] = useState([]);\r\n    const [seasonsIds, setSeasonsIds] = useState([]);\r\n    const [changed, setChanged] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [seasonName, setSeasonName] = useState('');\r\n    const [seasonId, setSeasonId] = useState('');\r\n\r\n    const [isCompetitionInStorage, setIsCompetitionInStorage] = useState(false);\r\n    \r\n    const changeSeasonName = (e) => {\r\n        setSeasonName(e.target.value);\r\n    }\r\n\r\n    const changeSeasonId = (e) => {\r\n        setSeasonId(e.target.value);\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newSeason = {\r\n            _id: seasonId,\r\n            name: seasonName,\r\n            competition_id: +localStorage.getItem(\"clicked_competition\")\r\n        }\r\n        axios.post('http://localhost:4000/app/newSeason', newSeason)\r\n            .then(() => {\r\n                setSeasonName('');\r\n                setSeasonId('');\r\n                renderSeasons(+localStorage.getItem(\"clicked_competition\"));\r\n            })\r\n            .then(() => alert(\"The Season has been successfully created!\"));\r\n    }\r\n\r\n    const renderSeasons = (e) => {\r\n        axios.get(`http://localhost:4000/app/getSeasons/${e}`)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                for(let i = 0; i < res.length; i++) {\r\n                    seasons[i] = {\r\n                        \"value\": res[i].name,\r\n                        \"label\": res[i].name,\r\n                        \"id\": res[i]._id\r\n                     }\r\n                };\r\n                setSeasons(seasons);\r\n                \r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:4000/app/getSeasons')\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                 for(let i = 0; i < res.length; i++) {\r\n                    seasonsIds[i] = res[i]._id\r\n                };\r\n                setSeasonsIds(seasonsIds);\r\n            });\r\n    }, [seasonsIds])\r\n\r\n    useEffect(() => {\r\n        if(seasonsIds.includes(+seasonId)) {\r\n            setMessage(\"This Season id already exists. Please choose another Season id.\");\r\n        } else {\r\n            setMessage(\"\");\r\n        }\r\n    }, [seasonId, seasonsIds]);\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <button className = \"open_button\" onClick = {() => setChanged(!changed)}>\r\n                    Would you like to create a new Season?\r\n                </button>\r\n            </div>\r\n            <div style = {{display: changed ? \"block\" : \"none\"}}>\r\n                <div className = \"createHeader\">\r\n                    <h1>Create a new Season</h1>\r\n                </div>\r\n                <p style = {{margin: '0'}}>Please be sure that <i><b>the Competition is chosen</b></i> before you start creating a new Season.</p>\r\n                <Select\r\n                    placeholder = \"Which Competition does a new Season belong to?\"\r\n                    onChange = {(e) => {\r\n                        renderSeasons(e.id);\r\n                        localStorage.setItem(\"clicked_competition\", e.id);\r\n                        setIsCompetitionInStorage(true);\r\n                        localStorage.removeItem(\"clicked_season\");\r\n                    }}\r\n                    options = {competitions}\r\n                    onMenuOpen = {() => {\r\n                        setSeasons([])\r\n                    }}\r\n                />\r\n                <div className = \"formPlusMessageContainer\">\r\n                    <form className = \"creationForm\">\r\n                        <div className = \"input_container\">\r\n                            <label htmlFor = \"enterSeasonId\">\r\n                                <span className = \"star\">*</span>Season id:\r\n                            </label>\r\n                            <input\r\n                                id = \"enterSeasonId\"\r\n                                type = \"number\"\r\n                                value = {seasonId}\r\n                                placeholder = \"Enter a Season id\"\r\n                                autoComplete = \"off\"\r\n                                onChange = {(e) => changeSeasonId(e)}>\r\n                            </input>\r\n                        </div>\r\n                        <div className = \"input_container\">\r\n                            <label htmlFor = \"enterSeasonName\">\r\n                                <span className = \"star\">*</span>Season name:\r\n                            </label>\r\n                            <input\r\n                                id = \"enterSeasonName\"\r\n                                type = \"text\"\r\n                                value = {seasonName}\r\n                                placeholder = \"Enter a Season name\"\r\n                                autoComplete = \"off\"\r\n                                onChange = {(e) => changeSeasonName(e)}>\r\n                            </input>\r\n                        </div>\r\n                        <button\r\n                            className = \"submit_button\"\r\n                            disabled = {seasonId && seasonName && isCompetitionInStorage && !seasonsIds.includes(+seasonId) ? false : true}\r\n                            onClick = {(e) => onClick(e)}>Create a new Season</button>\r\n                    </form>\r\n                    <div className = \"message_container\" style ={message ? {border: '2px solid #FF0000'} : {border: '2px solid #00FF00'}}>\r\n                        <Message message = {message}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <MatchForm\r\n                        seasons = {seasons}\r\n                        isCompetitionInStorage = {isCompetitionInStorage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonForm;"]},"metadata":{},"sourceType":"module"}