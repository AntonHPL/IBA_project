{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBA Project\\\\back\\\\front\\\\src\\\\components\\\\CompetitionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Context } from './context';\nimport SeasonForm from './SeasonForm';\nimport Message from './Message';\nimport axios from 'axios';\nimport '../styles/CompetitionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompetitionForm = ({\n  competitions\n}) => {\n  _s();\n\n  const [competitionName, setCompetitionName] = useState('');\n  const [competitionsIds, setCompetitionsIds] = useState([]);\n  const [competitionId, setCompetitionId] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    competitionAdded,\n    setCompetitionAdded\n  } = useContext(Context);\n\n  const changeCompetitionName = e => {\n    setCompetitionName(e.target.value);\n  };\n\n  const changeCompetitionId = e => {\n    setCompetitionId(e.target.value);\n  };\n\n  const onClick = e => {\n    e.preventDefault();\n    const newCompetition = {\n      _id: competitionId,\n      name: competitionName\n    };\n    axios.post('http://localhost:4000/app/newCompetition', newCompetition).then(() => {\n      setCompetitionId('');\n      setCompetitionName('');\n      setCompetitionAdded(!competitionAdded);\n    }).then(() => alert(\"The Competition has been successfully created!\"));\n  };\n\n  useEffect(() => {\n    if (competitions) {\n      for (let i = 0; i < competitions.length; i++) {\n        competitionsIds[i] = competitions[i].id;\n      }\n\n      ;\n    }\n  }, [competitions, competitionsIds]);\n  useEffect(() => {\n    if (competitionsIds.includes(+competitionId)) {\n      setMessage(\"This Competition id already exists. Please choose another Competition id.\");\n    } else {\n      setMessage(\"\");\n    }\n  }, [competitionId, competitionsIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a new Competition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formPlusMessageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"creationForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"enterCompetitionId\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"star\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), \"Competition id:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"enterCompetitionId\",\n            type: \"number\",\n            value: competitionId,\n            placeholder: \"Enter a Competition id\",\n            autoComplete: \"off\",\n            onChange: e => changeCompetitionId(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"enterCompetitionName\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"star\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), \"Competition name:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"enterCompetitionName\",\n            type: \"text\",\n            value: competitionName,\n            placeholder: \"Enter a Competition name\",\n            autoComplete: \"off\",\n            onChange: e => changeCompetitionName(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit_button\",\n          disabled: competitionId && competitionName && !competitionsIds.includes(+competitionId) ? false : true,\n          onClick: e => onClick(e),\n          children: \"Create a new Competition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message_container\",\n        style: message ? {\n          border: '2px solid #FF0000'\n        } : {\n          border: '2px solid #00FF00'\n        },\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SeasonForm, {\n        competitions: competitions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompetitionForm, \"D/bxuNcYDHQpQHuebKKrxpp/fyc=\");\n\n_c = CompetitionForm;\nexport default CompetitionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompetitionForm\");","map":{"version":3,"sources":["D:/IBA Project/back/front/src/components/CompetitionForm.js"],"names":["React","useState","useEffect","useContext","Context","SeasonForm","Message","axios","CompetitionForm","competitions","competitionName","setCompetitionName","competitionsIds","setCompetitionsIds","competitionId","setCompetitionId","message","setMessage","competitionAdded","setCompetitionAdded","changeCompetitionName","e","target","value","changeCompetitionId","onClick","preventDefault","newCompetition","_id","name","post","then","alert","i","length","id","includes","border"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport { Context } from './context';\r\nimport SeasonForm from './SeasonForm';\r\nimport Message from './Message';\r\nimport axios from 'axios';\r\nimport '../styles/CompetitionForm.css'\r\n\r\nconst CompetitionForm = ({competitions}) => {\r\n    const [competitionName, setCompetitionName] = useState('');\r\n    const [competitionsIds, setCompetitionsIds] = useState([]);\r\n    const [competitionId, setCompetitionId] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const {competitionAdded, setCompetitionAdded} = useContext(Context);\r\n\r\n    const changeCompetitionName = (e) => {\r\n        setCompetitionName(e.target.value);\r\n    }\r\n\r\n    const changeCompetitionId = (e) => {\r\n        setCompetitionId(e.target.value);\r\n    }\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newCompetition = {\r\n            _id: competitionId,\r\n            name: competitionName\r\n        }\r\n        axios.post('http://localhost:4000/app/newCompetition', newCompetition)\r\n            .then(() => {\r\n                setCompetitionId('');\r\n                setCompetitionName('');\r\n                setCompetitionAdded(!competitionAdded);\r\n            })\r\n            .then(() => alert(\"The Competition has been successfully created!\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(competitions) {\r\n            for(let i = 0; i < competitions.length; i++) {\r\n                competitionsIds[i] = competitions[i].id;\r\n            };\r\n    }}, [competitions, competitionsIds])\r\n\r\n    useEffect(() => {\r\n        if(competitionsIds.includes(+competitionId)) {\r\n            setMessage(\"This Competition id already exists. Please choose another Competition id.\");\r\n        } else {\r\n            setMessage(\"\");\r\n        }\r\n    }, [competitionId, competitionsIds]);\r\n    \r\n    return(\r\n        <div>\r\n            <div className = \"createHeader\">\r\n              <h1>Create a new Competition</h1>\r\n            </div>\r\n            <div className = \"formPlusMessageContainer\">\r\n                <form className = \"creationForm\">\r\n                    <div className = \"input_container\">\r\n                        <label htmlFor = \"enterCompetitionId\">\r\n                            <span className = \"star\">*</span>Competition id:\r\n                        </label>\r\n                        <input\r\n                            id = \"enterCompetitionId\"\r\n                            type = \"number\"\r\n                            value = {competitionId}\r\n                            placeholder = \"Enter a Competition id\"\r\n                            autoComplete = \"off\"\r\n                            onChange = {(e) => changeCompetitionId(e)}>\r\n                        </input>\r\n                    </div>\r\n                    <div className = \"input_container\">\r\n                        <label htmlFor = \"enterCompetitionName\">\r\n                            <span className = \"star\">*</span>Competition name:\r\n                        </label>\r\n                        <input\r\n                            id = \"enterCompetitionName\"\r\n                            type = \"text\"\r\n                            value = {competitionName}\r\n                            placeholder = \"Enter a Competition name\"\r\n                            autoComplete = \"off\"\r\n                            onChange = {(e) => changeCompetitionName(e)}>\r\n                        </input>\r\n                    </div>\r\n                    <button\r\n                        className = \"submit_button\"\r\n                        disabled = {competitionId && competitionName && !competitionsIds.includes(+competitionId) ? false : true}\r\n                        onClick = {(e) => onClick(e)}>\r\n                            Create a new Competition\r\n                    </button>\r\n                </form>\r\n                <div className = \"message_container\" style ={message ? {border: '2px solid #FF0000'} : {border: '2px solid #00FF00'}}>\r\n                    <Message message = {message}/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <SeasonForm competitions = {competitions} />\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CompetitionForm;"]},"metadata":{},"sourceType":"module"}